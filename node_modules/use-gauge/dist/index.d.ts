interface UseGaugeParams {
    diameter: number;
    startAngle: number;
    endAngle: number;
    numTicks: number;
    domain: [number, number];
}
interface GetNeedleParams {
    value: number;
    baseRadius: number;
    tipRadius: number;
}
interface GetTickPropsParams {
    length: number;
    angle: number;
}
interface GetLabelPropsParams {
    angle: number;
    offset: number;
}
interface GetArcPropsParams {
    offset?: number;
    startAngle: number;
    endAngle: number;
}
export declare function useGauge(params: UseGaugeParams): {
    ticks: number[];
    getTickProps: (params: GetTickPropsParams) => {
        key: string;
        x1: number;
        x2: number;
        y1: number;
        y2: number;
    };
    getLabelProps: (params: GetLabelPropsParams) => {
        x: number;
        y: number;
        dominantBaseline: string;
        textAnchor: string;
    };
    valueToAngle: (value: number) => number;
    angleToValue: (angle: number) => number;
    getArcProps: (params: GetArcPropsParams) => {
        d: string;
    };
    getNeedleProps: (params: GetNeedleParams) => {
        base: {
            r: number;
            cx: number;
            cy: number;
        };
        tip: {
            r: number;
            cx: number;
            cy: number;
        };
        points: string;
    };
    getSVGProps: () => {
        width: number;
        height: number;
        viewBox: string;
    };
};
export {};
