{"ast":null,"code":"var _jsxFileName = \"/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/meter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Animated, Platform, StyleSheet, View } from 'react-native';\nimport * as Progress from 'react-native-progress';\nimport MaskedView from '@react-native-masked-view/masked-view';\nimport { withAnchorPoint } from 'react-native-anchor-point';\nimport useDidMountEffect from '../helper/useDidMountEffect';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CIRCLE = Math.PI * 2;\n\nconst Gauge = props => {\n  _s();\n\n  const style = StyleSheet.compose(styles.arc, props.style);\n  const {\n    size,\n    progress,\n    animated,\n    overallGradient,\n    addTriangleTip,\n    triangleTipWidth,\n    triangleTipHeight,\n    triangleNeedle,\n    addCircle,\n    circleSize,\n    addTriangleBase,\n    triangleBaseWidth,\n    triangleBaseHeight,\n    translateBaseShapeY,\n    alwaysUseEndAngle,\n    endAngle,\n    unfilledEndAngle,\n    rotate,\n    thickness,\n    borderWidth,\n    needleWidth,\n    needleHeight,\n    needleBorderRadius,\n    translateNeedleY,\n    color,\n    borderColor,\n    needleColor,\n    unfilledColor,\n    circleColor,\n    triangleTipColor,\n    triangleBaseColor,\n    gradientStyle\n  } = props;\n  const prevCountRef = useRef();\n  useDidMountEffect(() => {\n    if (animated) {\n      prevCountRef.current = progress * CIRCLE * unfilledEndAngle;\n      moveNeedleFn();\n    }\n  }, [progress, unfilledEndAngle]);\n  const moveNeedle = useRef(new Animated.Value(progress * CIRCLE * unfilledEndAngle)).current;\n\n  const moveNeedleFn = () => {\n    Animated.spring(moveNeedle, {\n      toValue: progress * CIRCLE * unfilledEndAngle,\n      bounciness: 0,\n      useNativeDriver: true\n    }).start();\n  };\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: overallGradient ? /*#__PURE__*/_jsxDEV(View, {\n      style: { ...styles.maskContainer,\n        height: size,\n        width: size\n      },\n      children: /*#__PURE__*/_jsxDEV(MaskedView, {\n        maskElement: /*#__PURE__*/_jsxDEV(Progress.Circle, {\n          size: size,\n          progress: progress,\n          alwaysUseEndAngle: alwaysUseEndAngle,\n          endAngle: endAngle,\n          unfilledEndAngle: unfilledEndAngle,\n          thickness: thickness,\n          borderWidth: borderWidth,\n          color: color,\n          borderColor: borderColor,\n          unfilledColor: unfilledColor,\n          indeterminate: false,\n          style: { ...style,\n            transform: [{\n              rotate: rotate\n            }]\n          },\n          children: [/*#__PURE__*/_jsxDEV(Animated.View, {\n            style: [{\n              position: 'absolute',\n              width: triangleNeedle ? 0 : needleWidth,\n              height: triangleNeedle ? 0 : needleHeight,\n              top: size / 2 - needleHeight - translateNeedleY / 2,\n              borderTopWidth: 0,\n              borderLeftWidth: triangleNeedle ? needleWidth : 0,\n              borderRightWidth: triangleNeedle ? needleWidth : 0,\n              borderBottomWidth: triangleNeedle ? needleHeight : 0,\n              backgroundColor: triangleNeedle ? 'transparent' : needleColor,\n              borderRadius: triangleNeedle ? 0 : needleBorderRadius,\n              borderStyle: 'solid',\n              borderLeftColor: 'transparent',\n              borderRightColor: 'transparent',\n              borderBottomColor: needleColor\n            }, withAnchorPoint({\n              transform: [{\n                rotateZ: moveNeedle\n              }, {\n                translateY: -translateNeedleY\n              }]\n            }, {\n              x: 0.5,\n              y: 1\n            }, {\n              width: needleWidth,\n              height: needleHeight + translateNeedleY\n            })],\n            children: [addTriangleTip && /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                alignSelf: 'center',\n                top: -triangleTipHeight,\n                borderTopWidth: 0,\n                borderStyle: 'solid',\n                borderLeftColor: 'transparent',\n                borderRightColor: 'transparent',\n                borderBottomColor: triangleTipColor,\n                borderLeftWidth: triangleTipWidth,\n                borderRightWidth: triangleTipWidth,\n                borderBottomWidth: triangleTipHeight\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this), addTriangleBase && /*#__PURE__*/_jsxDEV(Animated.View, {\n              style: {\n                position: 'absolute',\n                alignSelf: 'center',\n                top: triangleBaseHeight + needleHeight / 2 - 1 - translateBaseShapeY,\n                borderTopWidth: 0,\n                borderStyle: 'solid',\n                borderLeftColor: 'transparent',\n                borderRightColor: 'transparent',\n                borderBottomColor: triangleBaseColor,\n                borderLeftWidth: triangleBaseWidth,\n                borderRightWidth: triangleBaseWidth,\n                borderBottomWidth: triangleBaseHeight\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), addCircle && /*#__PURE__*/_jsxDEV(Animated.View, {\n            style: {\n              position: 'absolute',\n              height: circleSize,\n              width: circleSize,\n              borderRadius: circleSize / 2,\n              backgroundColor: circleColor,\n              transform: [{\n                rotateZ: moveNeedle\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(LinearGradient, {\n          colors: overallGradient,\n          style: { ...gradientStyle,\n            height: size,\n            width: size\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Progress.Circle, {\n      size: size,\n      progress: progress,\n      alwaysUseEndAngle: alwaysUseEndAngle,\n      endAngle: endAngle,\n      unfilledEndAngle: unfilledEndAngle,\n      thickness: thickness,\n      borderWidth: borderWidth,\n      color: color,\n      borderColor: borderColor,\n      unfilledColor: unfilledColor,\n      indeterminate: false,\n      style: { ...style,\n        transform: [{\n          rotate: rotate\n        }]\n      },\n      children: [/*#__PURE__*/_jsxDEV(Animated.View, {\n        style: [{\n          position: 'absolute',\n          width: triangleNeedle ? 0 : needleWidth,\n          height: triangleNeedle ? 0 : needleHeight,\n          top: size / 2 - needleHeight - translateNeedleY / 2,\n          borderTopWidth: 0,\n          borderLeftWidth: triangleNeedle ? needleWidth : 0,\n          borderRightWidth: triangleNeedle ? needleWidth : 0,\n          borderBottomWidth: triangleNeedle ? needleHeight : 0,\n          backgroundColor: triangleNeedle ? 'transparent' : needleColor,\n          borderRadius: triangleNeedle ? 0 : needleBorderRadius,\n          borderStyle: 'solid',\n          borderLeftColor: 'transparent',\n          borderRightColor: 'transparent',\n          borderBottomColor: needleColor\n        }, withAnchorPoint({\n          transform: [{\n            rotateZ: moveNeedle\n          }, {\n            translateY: -translateNeedleY\n          }]\n        }, {\n          x: 0.5,\n          y: 1\n        }, {\n          width: needleWidth,\n          height: needleHeight + translateNeedleY\n        })],\n        children: addTriangleTip && /*#__PURE__*/_jsxDEV(View, {\n          style: {\n            alignSelf: 'center',\n            top: -triangleTipHeight,\n            borderTopWidth: 0,\n            borderStyle: 'solid',\n            borderLeftColor: 'transparent',\n            borderRightColor: 'transparent',\n            borderBottomColor: triangleTipColor,\n            borderLeftWidth: triangleTipWidth,\n            borderRightWidth: triangleTipWidth,\n            borderBottomWidth: triangleTipHeight\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), addCircle && /*#__PURE__*/_jsxDEV(Animated.View, {\n        style: {\n          position: 'absolute',\n          height: circleSize,\n          width: circleSize,\n          borderRadius: circleSize / 2,\n          backgroundColor: circleColor,\n          transform: [{\n            rotateZ: moveNeedle\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Gauge, \"7g2sbEeDiNsNmv1fcCNikmV+QiI=\", false, function () {\n  return [useDidMountEffect];\n});\n\n_c = Gauge;\nGauge.defaultProps = {\n  size: 30,\n  progress: 0.5,\n  overallGradient: false,\n  addTriangleTip: false,\n  triangleTipWidth: 2,\n  triangleTipHeight: 4,\n  triangleNeedle: false,\n  addCircle: false,\n  circleSize: 15,\n  addTriangleBase: false,\n  triangleBaseWidth: 5,\n  triangleBaseHeight: 20,\n  translateBaseShapeY: 0,\n  animated: true,\n  alwaysUseEndAngle: true,\n  endAngle: 0.9,\n  unfilledEndAngle: 0.9,\n  rotate: '-90deg',\n  thickness: 6,\n  borderWidth: 1,\n  needleWidth: 2,\n  needleHeight: 45,\n  needleBorderRadius: 0,\n  translateNeedleY: 0,\n  color: 'blue',\n  borderColor: 'blue',\n  needleColor: 'blue',\n  unfilledColor: 'grey',\n  circleColor: 'blue',\n  triangleTipColor: 'blue',\n  triangleBaseColor: 'blue',\n  gradientStyle: {}\n};\nlet styles;\n\nif (Platform.OS === 'ios') {\n  styles = StyleSheet.create({\n    arc: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    maskContainer: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  });\n} else {\n  styles = StyleSheet.create({\n    arc: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    maskContainer: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  });\n}\n\nexport default Gauge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gauge\");","map":{"version":3,"sources":["/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/meter.js"],"names":["React","useRef","Animated","Platform","StyleSheet","View","Progress","MaskedView","withAnchorPoint","useDidMountEffect","LinearGradient","CIRCLE","Math","PI","Gauge","props","style","compose","styles","arc","size","progress","animated","overallGradient","addTriangleTip","triangleTipWidth","triangleTipHeight","triangleNeedle","addCircle","circleSize","addTriangleBase","triangleBaseWidth","triangleBaseHeight","translateBaseShapeY","alwaysUseEndAngle","endAngle","unfilledEndAngle","rotate","thickness","borderWidth","needleWidth","needleHeight","needleBorderRadius","translateNeedleY","color","borderColor","needleColor","unfilledColor","circleColor","triangleTipColor","triangleBaseColor","gradientStyle","prevCountRef","current","moveNeedleFn","moveNeedle","Value","spring","toValue","bounciness","useNativeDriver","start","maskContainer","height","width","transform","position","top","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","backgroundColor","borderRadius","borderStyle","borderLeftColor","borderRightColor","borderBottomColor","rotateZ","translateY","x","y","alignSelf","defaultProps","OS","create","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\nimport {Animated, Platform, StyleSheet, View} from 'react-native';\nimport * as Progress from 'react-native-progress';\nimport MaskedView from '@react-native-masked-view/masked-view';\nimport {withAnchorPoint} from 'react-native-anchor-point';\nimport useDidMountEffect from '../helper/useDidMountEffect';\nimport {LinearGradient} from 'expo-linear-gradient';\n\nconst CIRCLE = Math.PI * 2;\n\nconst Gauge = (props) => {\n  const style = StyleSheet.compose(styles.arc, props.style);\n\n  const {\n    size,\n    progress,\n    animated,\n    overallGradient,\n    addTriangleTip,\n    triangleTipWidth,\n    triangleTipHeight,\n    triangleNeedle,\n    addCircle,\n    circleSize,\n    addTriangleBase,\n    triangleBaseWidth,\n    triangleBaseHeight,\n    translateBaseShapeY,\n    alwaysUseEndAngle,\n    endAngle,\n    unfilledEndAngle,\n    rotate,\n    thickness,\n    borderWidth,\n    needleWidth,\n    needleHeight,\n    needleBorderRadius,\n    translateNeedleY,\n    color,\n    borderColor,\n    needleColor,\n    unfilledColor,\n    circleColor,\n    triangleTipColor,\n    triangleBaseColor,\n    gradientStyle,\n  } = props;\n\n  const prevCountRef = useRef();\n  useDidMountEffect(() => {\n    if (animated) {\n      prevCountRef.current = progress * CIRCLE * unfilledEndAngle;\n      moveNeedleFn();\n    }\n  }, [progress, unfilledEndAngle]);\n\n  const moveNeedle = useRef(\n    new Animated.Value(progress * CIRCLE * unfilledEndAngle),\n  ).current;\n\n  const moveNeedleFn = () => {\n    Animated.spring(moveNeedle, {\n      toValue: progress * CIRCLE * unfilledEndAngle,\n      bounciness: 0,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  return (\n    <View>\n      {overallGradient ? (\n        <View\n          style={{\n            ...styles.maskContainer,\n            height: size,\n            width: size,\n          }}>\n          <MaskedView\n            maskElement={\n              <Progress.Circle\n                size={size}\n                progress={progress}\n                alwaysUseEndAngle={alwaysUseEndAngle}\n                endAngle={endAngle}\n                unfilledEndAngle={unfilledEndAngle}\n                thickness={thickness}\n                borderWidth={borderWidth}\n                color={color}\n                borderColor={borderColor}\n                unfilledColor={unfilledColor}\n                indeterminate={false}\n                style={{...style, transform: [{rotate: rotate}]}}>\n                <Animated.View\n                  style={[\n                    {\n                      position: 'absolute',\n                      width: triangleNeedle ? 0 : needleWidth,\n                      height: triangleNeedle ? 0 : needleHeight,\n                      top: size / 2 - needleHeight - translateNeedleY / 2,\n                      borderTopWidth: 0,\n                      borderLeftWidth: triangleNeedle ? needleWidth : 0,\n                      borderRightWidth: triangleNeedle ? needleWidth : 0,\n                      borderBottomWidth: triangleNeedle ? needleHeight : 0,\n                      backgroundColor: triangleNeedle\n                        ? 'transparent'\n                        : needleColor,\n                      borderRadius: triangleNeedle ? 0 : needleBorderRadius,\n                      borderStyle: 'solid',\n                      borderLeftColor: 'transparent',\n                      borderRightColor: 'transparent',\n                      borderBottomColor: needleColor,\n                    },\n                    withAnchorPoint(\n                      {\n                        transform: [\n                          {rotateZ: moveNeedle},\n                          {translateY: -translateNeedleY},\n                        ],\n                      },\n                      {x: 0.5, y: 1},\n                      {\n                        width: needleWidth,\n                        height: needleHeight + translateNeedleY,\n                      },\n                    ),\n                  ]}>\n                  {addTriangleTip && (\n                    <View\n                      style={{\n                        alignSelf: 'center',\n                        top: -triangleTipHeight,\n                        borderTopWidth: 0,\n                        borderStyle: 'solid',\n                        borderLeftColor: 'transparent',\n                        borderRightColor: 'transparent',\n                        borderBottomColor: triangleTipColor,\n                        borderLeftWidth: triangleTipWidth,\n                        borderRightWidth: triangleTipWidth,\n                        borderBottomWidth: triangleTipHeight,\n                      }}\n                    />\n                  )}\n                  {addTriangleBase && (\n                    <Animated.View\n                      style={{\n                        position: 'absolute',\n                        alignSelf: 'center',\n                        top:\n                          triangleBaseHeight +\n                          needleHeight / 2 -\n                          1 -\n                          translateBaseShapeY,\n                        borderTopWidth: 0,\n                        borderStyle: 'solid',\n                        borderLeftColor: 'transparent',\n                        borderRightColor: 'transparent',\n                        borderBottomColor: triangleBaseColor,\n                        borderLeftWidth: triangleBaseWidth,\n                        borderRightWidth: triangleBaseWidth,\n                        borderBottomWidth: triangleBaseHeight,\n                      }}\n                    />\n                  )}\n                </Animated.View>\n                {addCircle && (\n                  <Animated.View\n                    style={{\n                      position: 'absolute',\n                      height: circleSize,\n                      width: circleSize,\n                      borderRadius: circleSize / 2,\n                      backgroundColor: circleColor,\n                      transform: [{rotateZ: moveNeedle}],\n                    }}\n                  />\n                )}\n              </Progress.Circle>\n            }>\n            <LinearGradient\n              colors={overallGradient}\n              style={{\n                ...gradientStyle,\n                height: size,\n                width: size,\n              }}\n            />\n          </MaskedView>\n        </View>\n      ) : (\n        <Progress.Circle\n          size={size}\n          progress={progress}\n          alwaysUseEndAngle={alwaysUseEndAngle}\n          endAngle={endAngle}\n          unfilledEndAngle={unfilledEndAngle}\n          thickness={thickness}\n          borderWidth={borderWidth}\n          color={color}\n          borderColor={borderColor}\n          unfilledColor={unfilledColor}\n          indeterminate={false}\n          style={{...style, transform: [{rotate: rotate}]}}>\n          <Animated.View\n            style={[\n              {\n                position: 'absolute',\n                width: triangleNeedle ? 0 : needleWidth,\n                height: triangleNeedle ? 0 : needleHeight,\n                top: size / 2 - needleHeight - translateNeedleY / 2,\n                borderTopWidth: 0,\n                borderLeftWidth: triangleNeedle ? needleWidth : 0,\n                borderRightWidth: triangleNeedle ? needleWidth : 0,\n                borderBottomWidth: triangleNeedle ? needleHeight : 0,\n                backgroundColor: triangleNeedle ? 'transparent' : needleColor,\n                borderRadius: triangleNeedle ? 0 : needleBorderRadius,\n                borderStyle: 'solid',\n                borderLeftColor: 'transparent',\n                borderRightColor: 'transparent',\n                borderBottomColor: needleColor,\n              },\n              withAnchorPoint(\n                {\n                  transform: [\n                    {rotateZ: moveNeedle},\n                    {translateY: -translateNeedleY},\n                  ],\n                },\n                {x: 0.5, y: 1},\n                {\n                  width: needleWidth,\n                  height: needleHeight + translateNeedleY,\n                },\n              ),\n            ]}>\n            {addTriangleTip && (\n              <View\n                style={{\n                  alignSelf: 'center',\n                  top: -triangleTipHeight,\n                  borderTopWidth: 0,\n                  borderStyle: 'solid',\n                  borderLeftColor: 'transparent',\n                  borderRightColor: 'transparent',\n                  borderBottomColor: triangleTipColor,\n                  borderLeftWidth: triangleTipWidth,\n                  borderRightWidth: triangleTipWidth,\n                  borderBottomWidth: triangleTipHeight,\n                }}\n              />\n            )}\n          </Animated.View>\n          {addCircle && (\n            <Animated.View\n              style={{\n                position: 'absolute',\n                height: circleSize,\n                width: circleSize,\n                borderRadius: circleSize / 2,\n                backgroundColor: circleColor,\n                transform: [{rotateZ: moveNeedle}],\n              }}\n            />\n          )}\n        </Progress.Circle>\n      )}\n    </View>\n  );\n};\n\nGauge.defaultProps = {\n  size: 30,\n  progress: 0.5,\n  overallGradient: false,\n  addTriangleTip: false,\n  triangleTipWidth: 2,\n  triangleTipHeight: 4,\n  triangleNeedle: false,\n  addCircle: false,\n  circleSize: 15,\n  addTriangleBase: false,\n  triangleBaseWidth: 5,\n  triangleBaseHeight: 20,\n  translateBaseShapeY: 0,\n  animated: true,\n  alwaysUseEndAngle: true,\n  endAngle: 0.9,\n  unfilledEndAngle: 0.9,\n  rotate: '-90deg',\n  thickness: 6,\n  borderWidth: 1,\n  needleWidth: 2,\n  needleHeight: 45,\n  needleBorderRadius: 0,\n  translateNeedleY: 0,\n  color: 'blue',\n  borderColor: 'blue',\n  needleColor: 'blue',\n  unfilledColor: 'grey',\n  circleColor: 'blue',\n  triangleTipColor: 'blue',\n  triangleBaseColor: 'blue',\n  gradientStyle: {},\n};\n\nlet styles;\nif (Platform.OS === 'ios') {\n  styles = StyleSheet.create({\n    arc: {\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    maskContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n} else {\n  styles = StyleSheet.create({\n    arc: {\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    maskContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n}\n\nexport default Gauge;"]},"metadata":{},"sourceType":"module"}