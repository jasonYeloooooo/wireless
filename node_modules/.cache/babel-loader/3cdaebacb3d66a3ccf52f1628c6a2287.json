{"ast":null,"code":"var _jsxFileName = \"/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/meter.js\",\n    _s = $RefreshSig$();\n\nimport 'react-app-polyfill/ie11';\nimport './index.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useGauge } from '../.';\nimport { useControls } from 'leva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    value,\n    diameter,\n    minValue,\n    maxValue,\n    startAngle,\n    endAngle,\n    numTicks\n  } = useControls('Gauge settings', {\n    diameter: {\n      value: 300\n    },\n    value: {\n      value: 0,\n      min: 0,\n      max: 100\n    },\n    minValue: {\n      value: 0\n    },\n    maxValue: {\n      value: 100\n    },\n    startAngle: {\n      value: 90,\n      min: 0,\n      max: 360,\n      step: 1\n    },\n    endAngle: {\n      value: 270,\n      min: 0,\n      max: 360,\n      step: 1\n    },\n    numTicks: {\n      value: 11,\n      min: 0,\n      max: 30,\n      step: 1\n    }\n  });\n  const {\n    offset,\n    strokeWidth: arcStrokeWidth,\n    color: progressColor,\n    strokeLineCap\n  } = useControls('Arc Props', {\n    offset: {\n      value: 8,\n      min: 0,\n      max: 100,\n      step: 1\n    },\n    strokeWidth: {\n      value: 24,\n      min: 0,\n      max: 100\n    },\n    color: {\n      value: 'cornflowerblue'\n    },\n    strokeLineCap: {\n      value: 'round',\n      options: ['butt', 'round', 'square']\n    }\n  });\n  const {\n    color: tickColor,\n    length: tickLength\n  } = useControls('Tick Props', {\n    color: {\n      value: '#ccc'\n    },\n    length: {\n      value: 10,\n      min: 0,\n      max: 50\n    }\n  });\n  const {\n    baseRadius,\n    tipRadius,\n    color: needleColor\n  } = useControls('Needle Props', {\n    baseRadius: {\n      value: 12,\n      min: 0,\n      max: 50\n    },\n    tipRadius: {\n      value: 2,\n      min: 0,\n      max: 50\n    },\n    color: {\n      value: '#374151'\n    }\n  });\n  const {\n    ticks,\n    getTickProps,\n    getLabelProps,\n    valueToAngle,\n    angleToValue,\n    getArcProps,\n    getNeedleProps,\n    getSVGProps\n  } = useGauge({\n    startAngle,\n    endAngle,\n    numTicks,\n    diameter,\n    domain: [minValue, maxValue]\n  });\n  const {\n    tip,\n    base,\n    points\n  } = getNeedleProps({\n    value,\n    baseRadius,\n    tipRadius\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", { ...getSVGProps(),\n      className: \"max-w-full overflow-visible\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", { ...getArcProps({\n          offset,\n          startAngle,\n          endAngle\n        }),\n        fill: \"none\",\n        className: \"stroke-gray-100\",\n        strokeWidth: arcStrokeWidth // @ts-ignore\n        ,\n        strokeLinecap: strokeLineCap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), value > minValue && /*#__PURE__*/_jsxDEV(\"path\", { ...getArcProps({\n          offset,\n          startAngle,\n          endAngle: valueToAngle(value)\n        }),\n        fill: \"none\",\n        stroke: progressColor,\n        strokeWidth: arcStrokeWidth // @ts-ignore\n        ,\n        strokeLinecap: strokeLineCap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        id: \"ticks\",\n        children: ticks.map(angle => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              stroke: tickColor,\n              ...getTickProps({\n                angle,\n                length: tickLength\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              className: \"text-sm fill-gray-500 font-medium\",\n              ...getLabelProps({\n                angle,\n                offset: 20\n              }),\n              children: angleToValue(angle)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, `tick-group-${angle}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        id: \"needle\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"fill-gray-300\",\n          ...base,\n          r: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          fill: needleColor,\n          ...base\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          fill: needleColor,\n          ...tip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          fill: needleColor,\n          points: points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"fill-white\",\n          ...base,\n          r: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2ncO746LwRzfqe72JBJnIwoZldM=\", false, function () {\n  return [useControls, useControls, useControls, useControls, useGauge];\n});\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 166,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/meter.js"],"names":["React","ReactDOM","useGauge","useControls","App","value","diameter","minValue","maxValue","startAngle","endAngle","numTicks","min","max","step","offset","strokeWidth","arcStrokeWidth","color","progressColor","strokeLineCap","options","tickColor","length","tickLength","baseRadius","tipRadius","needleColor","ticks","getTickProps","getLabelProps","valueToAngle","angleToValue","getArcProps","getNeedleProps","getSVGProps","domain","tip","base","points","map","angle","render","document","getElementById"],"mappings":";;;AAAA,OAAO,yBAAP;AACA,OAAO,aAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,WAAT,QAA4B,MAA5B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA;AAPI,MAQFR,WAAW,CAAC,gBAAD,EAAmB;AAChCG,IAAAA,QAAQ,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KADsB;AAEhCA,IAAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,CAAT;AAAYO,MAAAA,GAAG,EAAE,CAAjB;AAAoBC,MAAAA,GAAG,EAAE;AAAzB,KAFyB;AAGhCN,IAAAA,QAAQ,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAHsB;AAIhCG,IAAAA,QAAQ,EAAE;AAAEH,MAAAA,KAAK,EAAE;AAAT,KAJsB;AAKhCI,IAAAA,UAAU,EAAE;AAAEJ,MAAAA,KAAK,EAAE,EAAT;AAAaO,MAAAA,GAAG,EAAE,CAAlB;AAAqBC,MAAAA,GAAG,EAAE,GAA1B;AAA+BC,MAAAA,IAAI,EAAE;AAArC,KALoB;AAMhCJ,IAAAA,QAAQ,EAAE;AAAEL,MAAAA,KAAK,EAAE,GAAT;AAAcO,MAAAA,GAAG,EAAE,CAAnB;AAAsBC,MAAAA,GAAG,EAAE,GAA3B;AAAgCC,MAAAA,IAAI,EAAE;AAAtC,KANsB;AAOhCH,IAAAA,QAAQ,EAAE;AAAEN,MAAAA,KAAK,EAAE,EAAT;AAAaO,MAAAA,GAAG,EAAE,CAAlB;AAAqBC,MAAAA,GAAG,EAAE,EAA1B;AAA8BC,MAAAA,IAAI,EAAE;AAApC;AAPsB,GAAnB,CARf;AAkBA,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,WAAW,EAAEC,cAFT;AAGJC,IAAAA,KAAK,EAAEC,aAHH;AAIJC,IAAAA;AAJI,MAKFjB,WAAW,CAAC,WAAD,EAAc;AAC3BY,IAAAA,MAAM,EAAE;AACNV,MAAAA,KAAK,EAAE,CADD;AAENO,MAAAA,GAAG,EAAE,CAFC;AAGNC,MAAAA,GAAG,EAAE,GAHC;AAINC,MAAAA,IAAI,EAAE;AAJA,KADmB;AAO3BE,IAAAA,WAAW,EAAE;AACXX,MAAAA,KAAK,EAAE,EADI;AAEXO,MAAAA,GAAG,EAAE,CAFM;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAPc;AAY3BK,IAAAA,KAAK,EAAE;AACLb,MAAAA,KAAK,EAAE;AADF,KAZoB;AAe3Be,IAAAA,aAAa,EAAE;AACbf,MAAAA,KAAK,EAAE,OADM;AAEbgB,MAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB;AAFI;AAfY,GAAd,CALf;AA0BA,QAAM;AAAEH,IAAAA,KAAK,EAAEI,SAAT;AAAoBC,IAAAA,MAAM,EAAEC;AAA5B,MAA2CrB,WAAW,CAAC,YAAD,EAAe;AACzEe,IAAAA,KAAK,EAAE;AACLb,MAAAA,KAAK,EAAE;AADF,KADkE;AAIzEkB,IAAAA,MAAM,EAAE;AACNlB,MAAAA,KAAK,EAAE,EADD;AAENO,MAAAA,GAAG,EAAE,CAFC;AAGNC,MAAAA,GAAG,EAAE;AAHC;AAJiE,GAAf,CAA5D;AAWA,QAAM;AACJY,IAAAA,UADI;AAEJC,IAAAA,SAFI;AAGJR,IAAAA,KAAK,EAAES;AAHH,MAIFxB,WAAW,CAAC,cAAD,EAAiB;AAC9BsB,IAAAA,UAAU,EAAE;AACVpB,MAAAA,KAAK,EAAE,EADG;AAEVO,MAAAA,GAAG,EAAE,CAFK;AAGVC,MAAAA,GAAG,EAAE;AAHK,KADkB;AAM9Ba,IAAAA,SAAS,EAAE;AACTrB,MAAAA,KAAK,EAAE,CADE;AAETO,MAAAA,GAAG,EAAE,CAFI;AAGTC,MAAAA,GAAG,EAAE;AAHI,KANmB;AAW9BK,IAAAA,KAAK,EAAE;AACLb,MAAAA,KAAK,EAAE;AADF;AAXuB,GAAjB,CAJf;AAoBA,QAAM;AACJuB,IAAAA,KADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA,cAPI;AAQJC,IAAAA;AARI,MASFjC,QAAQ,CAAC;AACXO,IAAAA,UADW;AAEXC,IAAAA,QAFW;AAGXC,IAAAA,QAHW;AAIXL,IAAAA,QAJW;AAKX8B,IAAAA,MAAM,EAAE,CAAC7B,QAAD,EAAWC,QAAX;AALG,GAAD,CATZ;AAiBA,QAAM;AAAE6B,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA;AAAb,MAAwBL,cAAc,CAAC;AAC3C7B,IAAAA,KAD2C;AAE3CoB,IAAAA,UAF2C;AAG3CC,IAAAA;AAH2C,GAAD,CAA5C;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA,2BACE,oBAASS,WAAW,EAApB;AAAwB,MAAA,SAAS,EAAC,6BAAlC;AAAA,8BACE,qBACMF,WAAW,CAAC;AACdlB,UAAAA,MADc;AAEdN,UAAAA,UAFc;AAGdC,UAAAA;AAHc,SAAD,CADjB;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,SAAS,EAAC,iBAPZ;AAQE,QAAA,WAAW,EAAEO,cARf,CASE;AATF;AAUE,QAAA,aAAa,EAAEG;AAVjB;AAAA;AAAA;AAAA;AAAA,cADF,EAaGf,KAAK,GAAGE,QAAR,iBACC,qBACM0B,WAAW,CAAC;AACdlB,UAAAA,MADc;AAEdN,UAAAA,UAFc;AAGdC,UAAAA,QAAQ,EAAEqB,YAAY,CAAC1B,KAAD;AAHR,SAAD,CADjB;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,MAAM,EAAEc,aAPV;AAQE,QAAA,WAAW,EAAEF,cARf,CASE;AATF;AAUE,QAAA,aAAa,EAAEG;AAVjB;AAAA;AAAA;AAAA;AAAA,cAdJ,eA2BE;AAAG,QAAA,EAAE,EAAC,OAAN;AAAA,kBACGQ,KAAK,CAACY,GAAN,CAAWC,KAAD,IAAW;AACpB,8BACE,QAAC,KAAD,CAAO,QAAP;AAAA,oCACE;AACE,cAAA,MAAM,EAAEnB,SADV;AAAA,iBAEMO,YAAY,CAAC;AAAEY,gBAAAA,KAAF;AAASlB,gBAAAA,MAAM,EAAEC;AAAjB,eAAD;AAFlB;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AACE,cAAA,SAAS,EAAC,mCADZ;AAAA,iBAEMM,aAAa,CAAC;AAAEW,gBAAAA,KAAF;AAAS1B,gBAAAA,MAAM,EAAE;AAAjB,eAAD,CAFnB;AAAA,wBAIGiB,YAAY,CAACS,KAAD;AAJf;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA,aAAsB,cAAaA,KAAM,EAAzC;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD,SAfA;AADH;AAAA;AAAA;AAAA;AAAA,cA3BF,eA6CE;AAAG,QAAA,EAAE,EAAC,QAAN;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAA,aAAsCH,IAAtC;AAA4C,UAAA,CAAC,EAAE;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAEX,WAAd;AAAA,aAA+BW;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,IAAI,EAAEX,WAAd;AAAA,aAA+BU;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAU,UAAA,IAAI,EAAEV,WAAhB;AAA6B,UAAA,MAAM,EAAEY;AAArC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA,aAAmCD,IAAnC;AAAyC,UAAA,CAAC,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CA5JD;;GAAMlC,G;UASAD,W,EAeAA,W,EAqB6CA,W,EAe7CA,W,EAyBAD,Q;;;KArFAE,G;AA8JNH,QAAQ,CAACyC,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import 'react-app-polyfill/ie11';\nimport './index.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useGauge } from '../.';\nimport { useControls } from 'leva';\n\nconst App = () => {\n  const {\n    value,\n    diameter,\n    minValue,\n    maxValue,\n    startAngle,\n    endAngle,\n    numTicks,\n  } = useControls('Gauge settings', {\n    diameter: { value: 300 },\n    value: { value: 0, min: 0, max: 100 },\n    minValue: { value: 0 },\n    maxValue: { value: 100 },\n    startAngle: { value: 90, min: 0, max: 360, step: 1 },\n    endAngle: { value: 270, min: 0, max: 360, step: 1 },\n    numTicks: { value: 11, min: 0, max: 30, step: 1 },\n  });\n\n  const {\n    offset,\n    strokeWidth: arcStrokeWidth,\n    color: progressColor,\n    strokeLineCap,\n  } = useControls('Arc Props', {\n    offset: {\n      value: 8,\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    strokeWidth: {\n      value: 24,\n      min: 0,\n      max: 100,\n    },\n    color: {\n      value: 'cornflowerblue',\n    },\n    strokeLineCap: {\n      value: 'round',\n      options: ['butt', 'round', 'square'],\n    },\n  });\n\n  const { color: tickColor, length: tickLength } = useControls('Tick Props', {\n    color: {\n      value: '#ccc',\n    },\n    length: {\n      value: 10,\n      min: 0,\n      max: 50,\n    },\n  });\n\n  const {\n    baseRadius,\n    tipRadius,\n    color: needleColor,\n  } = useControls('Needle Props', {\n    baseRadius: {\n      value: 12,\n      min: 0,\n      max: 50,\n    },\n    tipRadius: {\n      value: 2,\n      min: 0,\n      max: 50,\n    },\n    color: {\n      value: '#374151',\n    },\n  });\n\n  const {\n    ticks,\n    getTickProps,\n    getLabelProps,\n    valueToAngle,\n    angleToValue,\n    getArcProps,\n    getNeedleProps,\n    getSVGProps,\n  } = useGauge({\n    startAngle,\n    endAngle,\n    numTicks,\n    diameter,\n    domain: [minValue, maxValue],\n  });\n\n  const { tip, base, points } = getNeedleProps({\n    value,\n    baseRadius,\n    tipRadius,\n  });\n\n  return (\n    <div className=\"h-screen flex items-center justify-center\">\n      <svg {...getSVGProps()} className=\"max-w-full overflow-visible\">\n        <path\n          {...getArcProps({\n            offset,\n            startAngle,\n            endAngle,\n          })}\n          fill=\"none\"\n          className=\"stroke-gray-100\"\n          strokeWidth={arcStrokeWidth}\n          // @ts-ignore\n          strokeLinecap={strokeLineCap}\n        />\n        {value > minValue && (\n          <path\n            {...getArcProps({\n              offset,\n              startAngle,\n              endAngle: valueToAngle(value),\n            })}\n            fill=\"none\"\n            stroke={progressColor}\n            strokeWidth={arcStrokeWidth}\n            // @ts-ignore\n            strokeLinecap={strokeLineCap}\n          />\n        )}\n        <g id=\"ticks\">\n          {ticks.map((angle) => {\n            return (\n              <React.Fragment key={`tick-group-${angle}`}>\n                <line\n                  stroke={tickColor}\n                  {...getTickProps({ angle, length: tickLength })}\n                />\n                <text\n                  className=\"text-sm fill-gray-500 font-medium\"\n                  {...getLabelProps({ angle, offset: 20 })}\n                >\n                  {angleToValue(angle)}\n                </text>\n              </React.Fragment>\n            );\n          })}\n        </g>\n        <g id=\"needle\">\n          <circle className=\"fill-gray-300\" {...base} r={24} />\n          <circle fill={needleColor} {...base} />\n          <circle fill={needleColor} {...tip} />\n          <polyline fill={needleColor} points={points} />\n          <circle className=\"fill-white\" {...base} r={4} />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}