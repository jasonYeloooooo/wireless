{"ast":null,"code":"var _jsxFileName = \"/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/meter.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CircularGauge extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.componentDidMount = () => {\n      const {\n        size\n      } = this.props;\n      const context = this.getCanvasContext();\n      this.radius = size / 2;\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = `bold ${this.radius / 2.5}px Arial`;\n      this.drawBackground();\n      this.drawProgress();\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      const {\n        size\n      } = this.props;\n      this.radius = size / 2;\n      this.clearProgress();\n      this.drawProgress();\n    };\n\n    this.getCanvasContext = () => {\n      const node = ReactDOM.findDOMNode(this.refs.canvas);\n      return node.getContext('2d');\n    };\n\n    this.drawBackground = () => {\n      const {\n        radius,\n        props\n      } = this;\n      const context = this.getCanvasContext();\n      context.fillStyle = props.arcColor;\n      context.beginPath();\n      context.arc(radius, radius, radius, 0, Math.PI * 2, false);\n      context.arc(radius, radius, radius / 1.5, Math.PI * 2, 0, true);\n      context.fill();\n    };\n\n    this.drawProgress = () => {\n      const {\n        radius,\n        props\n      } = this;\n      const {\n        percent,\n        arcBackgroundColor\n      } = props;\n      const context = this.getCanvasContext();\n      context.fillText(`${percent}%`, radius, radius);\n      context.fillStyle = arcBackgroundColor;\n      context.beginPath();\n      context.arc(radius, radius, radius, Math.PI * 2 * percent * 1.01, Math.PI * 2, false);\n      context.arc(radius, radius, radius / 1.5, Math.PI * 2, Math.PI * 2 * percent * 0.01, true);\n      context.fill();\n    };\n\n    this.clearProgress = () => {\n      const {\n        size\n      } = this.props;\n      const context = this.getCanvasContext();\n      context.clearRect(0, 0, size, size);\n      this.drawBackground();\n    };\n\n    this.radius = 0;\n  }\n\n  render() {\n    const {\n      size,\n      className\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: className,\n      ref: \"canvas\",\n      width: size,\n      height: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nCircularGauge.propTypes = {\n  size: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  arcBackgroundColor: PropTypes.string,\n  arcColor: PropTypes.string\n};\nCircularGauge.defaultProps = {\n  className: 'react-canvas-circular-gauge',\n  arcBackgroundColor: '#6D6D72',\n  arcColor: '#049'\n};","map":{"version":3,"sources":["/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/meter.js"],"names":["React","ReactDOM","PropTypes","CircularGauge","Component","constructor","props","componentDidMount","size","context","getCanvasContext","radius","textAlign","textBaseline","font","drawBackground","drawProgress","componentDidUpdate","prevProps","prevState","clearProgress","node","findDOMNode","refs","canvas","getContext","fillStyle","arcColor","beginPath","arc","Math","PI","fill","percent","arcBackgroundColor","fillText","clearRect","render","className","propTypes","number","isRequired","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\n\n\nexport default class CircularGauge extends React.Component {\n\n  static propTypes = {\n    size: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    arcBackgroundColor: PropTypes.string,\n    arcColor: PropTypes.string\n  }\n\n  static defaultProps = {\n    className: 'react-canvas-circular-gauge',\n    arcBackgroundColor: '#6D6D72',\n    arcColor: '#049'\n  }\n\n  constructor (props) {\n    super(props)\n    this.radius = 0\n  }\n\n  componentDidMount =  () => {\n    const { size } = this.props\n    const context = this.getCanvasContext()\n\n    this.radius = size / 2\n    context.textAlign = 'center'\n    context.textBaseline = 'middle'\n    context.font = `bold ${this.radius / 2.5}px Arial`\n    this.drawBackground()\n    this.drawProgress()\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    const { size } = this.props\n    this.radius = size / 2\n    this.clearProgress()\n    this.drawProgress()\n  }\n\n  getCanvasContext = () => {\n    const node = ReactDOM.findDOMNode(this.refs.canvas)\n    return node.getContext('2d')\n  }\n\n  drawBackground = () => {\n    const {\n      radius,\n      props\n    } = this\n    const context = this.getCanvasContext()\n    context.fillStyle = props.arcColor\n    context.beginPath()\n    context.arc(radius, radius, radius, 0, Math.PI * 2, false)\n    context.arc(radius, radius, radius / 1.5, Math.PI * 2, 0, true)\n    context.fill()\n  }\n\n  drawProgress =  () => {\n    const {\n      radius,\n      props } = this\n    const {\n      percent,\n      arcBackgroundColor } = props\n    const context = this.getCanvasContext()\n    context.fillText(`${percent}%`, radius, radius)\n    context.fillStyle = arcBackgroundColor\n    context.beginPath()\n    context.arc(radius, radius, radius, Math.PI * 2 * percent * 1.01, Math.PI * 2, false)\n    context.arc(radius, radius, radius / 1.5, Math.PI * 2, Math.PI * 2 * percent * 0.01, true)\n    context.fill()\n  }\n\n  clearProgress = () => {\n    const { size } = this.props\n    const context = this.getCanvasContext()\n    context.clearRect(0, 0, size, size)\n    this.drawBackground()\n  }\n\n  render () {\n    const { size, className } = this.props\n    return (\n      <canvas\n        className={className}\n        ref='canvas'\n        width={size}\n        height={size}\n      />\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}