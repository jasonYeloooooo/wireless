{"ast":null,"code":"var _jsxFileName = \"/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/getData.js\";\nimport React, { Component } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, set, get, child } from \"firebase/database\";\nimport Gauge from './Gauge.js'; // TODO: Replace with your app's Firebase project configuration\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCUci--3h7AlnoWyshM4rZbXPoVKzQXC68\",\n  authDomain: \"wirelessnetwork-5f810.firebaseapp.com\",\n  databaseURL: \"https://wirelessnetwork-5f810-default-rtdb.firebaseio.com\",\n  projectId: \"wirelessnetwork-5f810\",\n  storageBucket: \"wirelessnetwork-5f810.appspot.com\",\n  messagingSenderId: \"511134433821\",\n  appId: \"1:511134433821:web:50173d32f84754c911fcf4\",\n  measurementId: \"G-FFEXX3M9C8\"\n};\nconst app = initializeApp(firebaseConfig); // Get a reference to the database service\n\nconst database = getDatabase(app);\n\nfunction writeUserData(userId, name, email, imageUrl) {\n  set(ref(database, '/jason/userId'), {\n    username: 'name',\n    email: \"email\",\n    profile_picture: \"imageUrl\"\n  });\n}\n\nexport default class getData extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sensor1: '',\n      sensor2: '',\n      sensor3: ''\n    };\n\n    this.readSensor1Data = () => {\n      setInterval(this.fun1, 1000, \"fun1\");\n    };\n\n    this.fun1 = () => {\n      const dbRef = ref(getDatabase());\n      get(child(dbRef, '/sensor/sensor1')).then(snapshot => {\n        if (snapshot.exists()) {\n          this.setState({\n            sensor1: snapshot.val()\n          });\n        } else {\n          console.log(\"No data available\");\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.readSensor2Data = () => {\n      setInterval(this.fun2, 1000, \"fun2\");\n    };\n\n    this.fun2 = () => {\n      const dbRef = ref(getDatabase());\n      get(child(dbRef, '/sensor/sensor2')).then(snapshot => {\n        if (snapshot.exists()) {\n          this.setState({\n            sensor2: snapshot.val()\n          });\n        } else {\n          console.log(\"No data available\");\n        }\n      }).catch(error => {\n        console.error(error);\n        writeUserData();\n      });\n    };\n\n    this.readSensor3Data = () => {\n      const dbRef = ref(getDatabase());\n      get(child(dbRef, '/sensor/sensor3')).then(snapshot => {\n        if (snapshot.exists()) {\n          this.setState({\n            sensor3: snapshot.val()\n          });\n        } else {\n          console.log(\"No data available\");\n        }\n      }).catch(error => {\n        console.error(error);\n        writeUserData();\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"the noise: \", this.state.sensor1, \" db\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.readSensor1Data,\n        children: \" get data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n        Noise: this.state.sensor1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"the noise: \", this.state.sensor2, \" db\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.readSensor2Data,\n        children: \" get data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n        Noise: this.state.sensor2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"the noise: \", this.state.sensor3, \" db\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.readSensor3Data,\n        children: \" get data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n        Noise: this.state.sensor3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/getData.js"],"names":["React","Component","initializeApp","getDatabase","ref","set","get","child","Gauge","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","database","writeUserData","userId","name","email","imageUrl","username","profile_picture","getData","state","sensor1","sensor2","sensor3","readSensor1Data","setInterval","fun1","dbRef","then","snapshot","exists","setState","val","console","log","catch","error","readSensor2Data","fun2","readSensor3Data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, set, get,child } from \"firebase/database\";\nimport Gauge from './Gauge.js'\n\n\n\n// TODO: Replace with your app's Firebase project configuration\nconst firebaseConfig = {\n \n    apiKey: \"AIzaSyCUci--3h7AlnoWyshM4rZbXPoVKzQXC68\",\n    authDomain: \"wirelessnetwork-5f810.firebaseapp.com\",\n    databaseURL: \"https://wirelessnetwork-5f810-default-rtdb.firebaseio.com\",\n    projectId: \"wirelessnetwork-5f810\",\n    storageBucket: \"wirelessnetwork-5f810.appspot.com\",\n    messagingSenderId: \"511134433821\",\n    appId: \"1:511134433821:web:50173d32f84754c911fcf4\",\n    measurementId: \"G-FFEXX3M9C8\"\n  \n};\n\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database service\nconst database = getDatabase(app);\n\nfunction writeUserData(userId, name, email, imageUrl) {\n  set(ref(database, '/jason/userId'), {\n    username: 'name',\n    email: \"email\",\n    profile_picture : \"imageUrl\"\n  });\n}\n\n\nexport default class getData extends Component {\n  state ={\n    sensor1: '',\n    sensor2: '',\n    sensor3: ''\n  }\n  \n    readSensor1Data =()=>{\n      setInterval(this.fun1,1000,\"fun1\")\n    }\n    fun1=()=>{\n      const dbRef = ref(getDatabase());\n      get(child(dbRef,'/sensor/sensor1' )).then((snapshot) => {\n      if (snapshot.exists()) {\n        this.setState ({\n          sensor1 : snapshot.val()\n        })\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n    }\n\n    readSensor2Data =()=>{\n      setInterval(this.fun2,1000,\"fun2\")\n    }\n    fun2=()=>{\n      const dbRef = ref(getDatabase());\n      get(child(dbRef,'/sensor/sensor2' )).then((snapshot) => {\n      if (snapshot.exists()) {\n        this.setState ({\n          sensor2 : snapshot.val()\n        })\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch((error) => {\n      console.error(error);\n      writeUserData()\n    });\n    }\n    readSensor3Data =()=>{\n      const dbRef = ref(getDatabase());\n      get(child(dbRef,'/sensor/sensor3' )).then((snapshot) => {\n      if (snapshot.exists()) {\n        this.setState ({\n          sensor3 : snapshot.val()\n        })\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch((error) => {\n      console.error(error);\n      writeUserData()\n    });\n    }\n\n    render() {\n      return (\n        <div>\n          <p>the noise: {this.state.sensor1} db</p>\n          <button onClick={this.readSensor1Data}> get data </button>\n          \n          <Gauge Noise={this.state.sensor1}></Gauge>\n          <br/>\n          <p>the noise: {this.state.sensor2} db</p>\n          <button onClick={this.readSensor2Data}> get data </button>\n          <Gauge Noise={this.state.sensor2}></Gauge>\n\n          <p>the noise: {this.state.sensor3} db</p>\n          <button onClick={this.readSensor3Data}> get data </button>\n          <Gauge Noise={this.state.sensor3}></Gauge>\n         \n        </div>\n      )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}