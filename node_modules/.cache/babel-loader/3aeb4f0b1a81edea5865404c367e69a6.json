{"ast":null,"code":"var _jsxFileName = \"/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/getData.js\";\nimport React, { Component } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, get, child } from \"firebase/database\"; // TODO: Replace with your app's Firebase project configuration\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyCUci--3h7AlnoWyshM4rZbXPoVKzQXC68\",\n//     authDomain: \"wirelessnetwork-5f810.firebaseapp.com\",\n//     databaseURL: \"https://wirelessnetwork-5f810-default-rtdb.firebaseio.com\",\n//     projectId: \"wirelessnetwork-5f810\",\n//     storageBucket: \"wirelessnetwork-5f810.appspot.com\",\n//     messagingSenderId: \"511134433821\",\n//     appId: \"1:511134433821:web:50173d32f84754c911fcf4\",\n//     measurementId: \"G-FFEXX3M9C8\"\n// };\n//const app = initializeApp(firebaseConfig);\n// Get a reference to the database service\n//const database = getDatabase(app);\n// function writeUserData(userId, name, email, imageUrl) {\n//   set(ref(database, '/jason/userId'), {\n//     username: 'name',\n//     email: \"email\",\n//     profile_picture : \"imageUrl\"\n//   });\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class getData extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sensor1: '',\n      sensor2: ''\n    };\n\n    this.readSensor1Data = () => {\n      const dbRef = ref(getDatabase());\n      get(child(dbRef, '/sensor/sensor1')).then(snapshot => {\n        if (snapshot.exists()) {\n          this.setState({\n            sensor1: snapshot.val()\n          });\n        } else {\n          console.log(\"No data available\");\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.readSensor2Data = () => {\n      const dbRef = ref(getDatabase());\n      get(child(dbRef, '/sensor/sensor2')).then(snapshot => {\n        if (snapshot.exists()) {\n          this.setState({\n            sensor2: snapshot.val()\n          });\n        } else {\n          console.log(\"No data available\");\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"the noise: \", this.state.sensor1, \" db\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.readSensor1Data,\n        children: \" get data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"the noise: \", this.state.sensor2, \" db\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.readSensor2Data,\n        children: \" get data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/getData.js"],"names":["React","Component","initializeApp","getDatabase","ref","get","child","getData","state","sensor1","sensor2","readSensor1Data","dbRef","then","snapshot","exists","setState","val","console","log","catch","error","readSensor2Data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA4BC,GAA5B,EAAgCC,KAAhC,QAA6C,mBAA7C,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAe,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC7CO,KAD6C,GACtC;AACLC,MAAAA,OAAO,EAAE,EADJ;AAELC,MAAAA,OAAO,EAAE;AAFJ,KADsC;;AAAA,SAM3CC,eAN2C,GAM1B,MAAI;AACnB,YAAMC,KAAK,GAAGR,GAAG,CAACD,WAAW,EAAZ,CAAjB;AACAE,MAAAA,GAAG,CAACC,KAAK,CAACM,KAAD,EAAO,iBAAP,CAAN,CAAH,CAAqCC,IAArC,CAA2CC,QAAD,IAAc;AACxD,YAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrB,eAAKC,QAAL,CAAe;AACbP,YAAAA,OAAO,EAAGK,QAAQ,CAACG,GAAT;AADG,WAAf;AAGD,SAJD,MAIO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,OARC,EAQCC,KARD,CAQQC,KAAD,IAAW;AAClBH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,OAVC;AAWD,KAnB0C;;AAAA,SAoB3CC,eApB2C,GAoB1B,MAAI;AACnB,YAAMV,KAAK,GAAGR,GAAG,CAACD,WAAW,EAAZ,CAAjB;AACAE,MAAAA,GAAG,CAACC,KAAK,CAACM,KAAD,EAAO,iBAAP,CAAN,CAAH,CAAqCC,IAArC,CAA2CC,QAAD,IAAc;AACxD,YAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrB,eAAKC,QAAL,CAAe;AACbN,YAAAA,OAAO,EAAGI,QAAQ,CAACG,GAAT;AADG,WAAf;AAGD,SAJD,MAIO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,OARC,EAQCC,KARD,CAQQC,KAAD,IAAW;AAClBH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,OAVC;AAWD,KAjC0C;AAAA;;AAmC3CE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,kCAAe,KAAKf,KAAL,CAAWC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKE,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kCAAe,KAAKH,KAAL,CAAWE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAE,KAAKY,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA7C0C","sourcesContent":["import React, { Component } from 'react'\n\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref,  get,child } from \"firebase/database\";\n\n\n// TODO: Replace with your app's Firebase project configuration\n// const firebaseConfig = {\n \n//     apiKey: \"AIzaSyCUci--3h7AlnoWyshM4rZbXPoVKzQXC68\",\n//     authDomain: \"wirelessnetwork-5f810.firebaseapp.com\",\n//     databaseURL: \"https://wirelessnetwork-5f810-default-rtdb.firebaseio.com\",\n//     projectId: \"wirelessnetwork-5f810\",\n//     storageBucket: \"wirelessnetwork-5f810.appspot.com\",\n//     messagingSenderId: \"511134433821\",\n//     appId: \"1:511134433821:web:50173d32f84754c911fcf4\",\n//     measurementId: \"G-FFEXX3M9C8\"\n  \n// };\n\n//const app = initializeApp(firebaseConfig);\n\n// Get a reference to the database service\n//const database = getDatabase(app);\n\n// function writeUserData(userId, name, email, imageUrl) {\n//   set(ref(database, '/jason/userId'), {\n//     username: 'name',\n//     email: \"email\",\n//     profile_picture : \"imageUrl\"\n//   });\n// }\n\n\nexport default class getData extends Component {\n  state ={\n    sensor1: '',\n    sensor2: ''\n  }\n  \n    readSensor1Data =()=>{\n      const dbRef = ref(getDatabase());\n      get(child(dbRef,'/sensor/sensor1' )).then((snapshot) => {\n      if (snapshot.exists()) {\n        this.setState ({\n          sensor1 : snapshot.val()\n        })\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n    }\n    readSensor2Data =()=>{\n      const dbRef = ref(getDatabase());\n      get(child(dbRef,'/sensor/sensor2' )).then((snapshot) => {\n      if (snapshot.exists()) {\n        this.setState ({\n          sensor2 : snapshot.val()\n        })\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n    }\n\n    render() {\n      return (\n        <div>\n          <p>the noise: {this.state.sensor1} db</p>\n          <button onClick={this.readSensor1Data}> get data </button>\n          <br/>\n          <p>the noise: {this.state.sensor2} db</p>\n          <button onClick={this.readSensor2Data}> get data </button>\n        </div>\n      )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}