{"ast":null,"code":"var _jsxFileName = \"/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/meter.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CircularGauge extends React.Component {\n  constructor(_props) {\n    super(_props);\n    this.propTypes = {\n      size: React.PropTypes.number.isRequired,\n      className: React.PropTypes.string,\n      arcBackgroundColor: React.PropTypes.string,\n      arcColor: React.PropTypes.string\n    };\n\n    this.componentDidMount = () => {\n      const {\n        size\n      } = this.props;\n      const context = this.getCanvasContext();\n      this.radius = size / 2;\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = `bold ${this.radius / 2.5}px Arial`;\n      this.drawBackground();\n      this.drawProgress();\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      const {\n        size\n      } = this.props;\n      this.radius = size / 2;\n      this.clearProgress();\n      this.drawProgress();\n    };\n\n    this.getCanvasContext = () => {\n      const node = ReactDOM.findDOMNode(this.refs.canvas);\n      return node.getContext('2d');\n    };\n\n    this.drawBackground = () => {\n      const {\n        radius,\n        props\n      } = this;\n      const context = this.getCanvasContext();\n      context.fillStyle = props.arcColor;\n      context.beginPath();\n      context.arc(radius, radius, radius, 0, Math.PI * 2, false);\n      context.arc(radius, radius, radius / 1.5, Math.PI * 2, 0, true);\n      context.fill();\n    };\n\n    this.drawProgress = () => {\n      const {\n        radius,\n        props\n      } = this;\n      const {\n        percent,\n        arcBackgroundColor\n      } = props;\n      const context = this.getCanvasContext();\n      context.fillText(`${percent}%`, radius, radius);\n      context.fillStyle = arcBackgroundColor;\n      context.beginPath();\n      context.arc(radius, radius, radius, Math.PI * 2 * percent * 1.01, Math.PI * 2, false);\n      context.arc(radius, radius, radius / 1.5, Math.PI * 2, Math.PI * 2 * percent * 0.01, true);\n      context.fill();\n    };\n\n    this.clearProgress = () => {\n      const {\n        size\n      } = this.props;\n      const context = this.getCanvasContext();\n      context.clearRect(0, 0, size, size);\n      this.drawBackground();\n    };\n\n    this.radius = 0;\n  }\n\n  render() {\n    const {\n      size,\n      className\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: className,\n      ref: \"canvas\",\n      width: size,\n      height: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nCircularGauge.defaultProps = {\n  className: 'react-canvas-circular-gauge',\n  arcBackgroundColor: '#6D6D72',\n  arcColor: '#049'\n};","map":{"version":3,"sources":["/Users/jasonyellow/Desktop/project/WN_APP/wn_app/src/component/meter.js"],"names":["React","ReactDOM","propTypes","CircularGauge","Component","constructor","props","size","PropTypes","number","isRequired","className","string","arcBackgroundColor","arcColor","componentDidMount","context","getCanvasContext","radius","textAlign","textBaseline","font","drawBackground","drawProgress","componentDidUpdate","prevProps","prevState","clearProgress","node","findDOMNode","refs","canvas","getContext","fillStyle","beginPath","arc","Math","PI","fill","percent","fillText","clearRect","render","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport propTypes from 'prop-types'\n\n\nexport default class CircularGauge extends React.Component {\n\n   propTypes = {\n    size: React.PropTypes.number.isRequired,\n    className: React.PropTypes.string,\n    arcBackgroundColor: React.PropTypes.string,\n    arcColor: React.PropTypes.string\n  }\n\n  static defaultProps = {\n    className: 'react-canvas-circular-gauge',\n    arcBackgroundColor: '#6D6D72',\n    arcColor: '#049'\n  }\n\n  constructor (props) {\n    super(props)\n    this.radius = 0\n  }\n\n  componentDidMount =  () => {\n    const { size } = this.props\n    const context = this.getCanvasContext()\n\n    this.radius = size / 2\n    context.textAlign = 'center'\n    context.textBaseline = 'middle'\n    context.font = `bold ${this.radius / 2.5}px Arial`\n    this.drawBackground()\n    this.drawProgress()\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    const { size } = this.props\n    this.radius = size / 2\n    this.clearProgress()\n    this.drawProgress()\n  }\n\n  getCanvasContext = () => {\n    const node = ReactDOM.findDOMNode(this.refs.canvas)\n    return node.getContext('2d')\n  }\n\n  drawBackground = () => {\n    const {\n      radius,\n      props\n    } = this\n    const context = this.getCanvasContext()\n    context.fillStyle = props.arcColor\n    context.beginPath()\n    context.arc(radius, radius, radius, 0, Math.PI * 2, false)\n    context.arc(radius, radius, radius / 1.5, Math.PI * 2, 0, true)\n    context.fill()\n  }\n\n  drawProgress =  () => {\n    const {\n      radius,\n      props } = this\n    const {\n      percent,\n      arcBackgroundColor } = props\n    const context = this.getCanvasContext()\n    context.fillText(`${percent}%`, radius, radius)\n    context.fillStyle = arcBackgroundColor\n    context.beginPath()\n    context.arc(radius, radius, radius, Math.PI * 2 * percent * 1.01, Math.PI * 2, false)\n    context.arc(radius, radius, radius / 1.5, Math.PI * 2, Math.PI * 2 * percent * 0.01, true)\n    context.fill()\n  }\n\n  clearProgress = () => {\n    const { size } = this.props\n    const context = this.getCanvasContext()\n    context.clearRect(0, 0, size, size)\n    this.drawBackground()\n  }\n\n  render () {\n    const { size, className } = this.props\n    return (\n      <canvas\n        className={className}\n        ref='canvas'\n        width={size}\n        height={size}\n      />\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}